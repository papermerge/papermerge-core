name: Version Bump

on:
  workflow_dispatch:
    inputs:
      incremented_part:
        type: choice
        description: Incremented Part
        default: '-'
        options:
          - major
          - minor
          - micro
          - pre
          - dev
          - final
          - '-'
      is_latest:
          type: boolean
          description: tag this version as latest?
          default: false
      frontend_tag:
          type: string
          required: true
          default: latest
      publish-to-dockerhub:
        description: 'Publish to Dockerhub?'
        type: boolean
        required: true
        default: true
      publish-to-ghcr:
        description: 'Publish to ghcr?'
        type: boolean
        required: true
        default: true
      publish-to-pypi:
        description: 'Publish to PyPi?'
        type: boolean
        required: true
        default: true
      update-openapi-schema:
        description: 'Open OpenAPI schema'
        type: boolean
        required: true
        default: true
jobs:
  version-bump:
    runs-on: ubuntu-latest
    outputs:
      old-version: ${{ steps.step-version-bump.outputs.OLD_VERSION }}
      new-version: ${{ steps.step-version-bump.outputs.NEW_VERSION }}
    steps:
      - uses: actions/checkout@master

      - name: Version bump
        id: step-version-bump
        uses: papermerge/banger@master
        with:
          files_list: "pyproject.toml,papermerge/core/version.py"
          incremented_part: ${{ inputs.incremented_part }}

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Generate Changelog
        run: |
          python -m pip install --upgrade pip
          pip install towncrier
          # will remove files from changelog.d/ and update changelog.md file
          towncrier build --version ${{steps.step-version-bump.outputs.NEW_VERSION}} --yes
        if: ${{ inputs.is_latest }}

      - name: Commit files
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "version bump ${{steps.step-version-bump.outputs.OLD_VERSION}} -> ${{steps.step-version-bump.outputs.NEW_VERSION}}" -a

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  update-openapi-schema:
    name: Update OpenAPI schema
    needs: ["version-bump"]
    uses: ./.github/workflows/update-openapi-schema.yml
    if: ${{ inputs.update-openapi-schema }}
    secrets:
      PAPERMERGE__MAIN__SECRET_KEY: ${{ secrets.PAPERMERGE__MAIN__SECRET_KEY }}
      GH_PAT_GENERATE_OPENAPI_SCHEMA: ${{ secrets.GH_PAT_GENERATE_OPENAPI_SCHEMA }}
    with:
      VERSION: ${{ needs.version-bump.outputs.new-version }}

  publish-to-dockerhub:
    name: Publish to Dockerhub
    needs: ["version-bump"]
    uses: ./.github/workflows/publish-to-dockerhub.yml
    if: ${{ inputs.publish-to-dockerhub }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      GH_PAT_TRIGGER_BUILD_DOCKER_IMAGE_WITH_UI: ${{ secrets.GH_PAT_TRIGGER_BUILD_DOCKER_IMAGE_WITH_UI }}
    with:
      VERSION: ${{ needs.version-bump.outputs.new-version }}
      IS_LATEST: ${{ inputs.is_latest }}
      FRONTEND_TAG: ${{ inputs.frontend_tag }}

  publish-to-ghcr:
    name: Publish to Ghcr.io
    needs: ["version-bump"]
    uses: ./.github/workflows/publish-to-ghcr.yml
    if: ${{ inputs.publish-to-ghcr }}
    secrets:
      MY_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      VERSION: ${{ needs.version-bump.outputs.new-version }}
      IS_LATEST: ${{ inputs.is_latest }}

  publish-to-pypi:
    name: Publish to Pypi
    needs: ["version-bump"]
    uses: ./.github/workflows/publish-to-pypi.yml
    if: ${{ inputs.publish-to-pypi }}
    secrets:
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
