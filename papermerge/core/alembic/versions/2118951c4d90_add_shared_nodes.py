"""add shared nodes

Revision ID: 2118951c4d90
Revises: 973801cf0c71
Create Date: 2025-04-01 06:44:04.725071

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "2118951c4d90"
down_revision: Union[str, None] = "973801cf0c71"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "shared_nodes",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("node_id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=True),
        sa.Column("group_id", sa.Uuid(), nullable=True),
        sa.Column("role_id", sa.Uuid(), nullable=False),
        sa.Column("owner_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.CheckConstraint(
            "user_id IS NOT NULL OR group_id IS NOT NULL",
            name="check__user_id_not_null__or__group_id_not_null",
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
            name="shared_nodes_group_id_fkey",
            ondelete="CASCADE",
            use_alter=True,
        ),
        sa.ForeignKeyConstraint(
            ["node_id"],
            ["nodes.id"],
            name="shared_nodes_node_id_fkey",
            ondelete="CASCADE",
            use_alter=True,
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
            name="shared_nodes_owner_id_fkey",
            ondelete="CASCADE",
            use_alter=True,
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
            name="shared_nodes_role_id_fkey",
            ondelete="CASCADE",
            use_alter=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="shared_nodes_user_id_fkey",
            ondelete="CASCADE",
            use_alter=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        if_not_exists=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    op.drop_table("shared_nodes", if_exists=True)
