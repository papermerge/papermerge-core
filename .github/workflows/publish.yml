name: Publish

on:
  workflow_dispatch:
    inputs:
      publish-to-dockerhub:
        description: 'Publish to Dockerhub?'
        type: boolean
        required: true
        default: true
      publish-to-ghcr:
        description: 'Publish to ghcr?'
        type: boolean
        required: true
        default: true
      publish-to-pypi:
        description: 'Publish to PyPi?'
        type: boolean
        required: true
        default: true


permissions:
  contents: read

jobs:
  extract-version:
    runs-on: ubuntu-latest
    outputs:
      old-version: ${{ steps.id-extract-version.outputs.OLD_VERSION }}
    steps:
      - uses: actions/checkout@master
      - name: Extract Version
        id: id-extract-version
        uses: papermerge/banger@master
        with:
          files_list: "pyproject.toml"

  build-and-push-to-dockerhub:
    name: Dockerhub build/push
    needs: extract-version
    if: ${{ github.event.inputs.publish-to-dockerhub == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: papermerge/papermerge:${{needs.extract-version.outputs.old-version}}
          file: docker/prod/Dockerfile
          platforms: linux/amd64,linux/arm64


  build-and-push-image-to-ghcr:
    name: ghcr.io build/push
    if: ${{ github.event.inputs.publish-to-ghcr == 'true' }}
    needs: extract-version
    runs-on: ubuntu-latest
    env:
      papermerge_image: ghcr.io/papermerge/papermerge
      swagger_ui_image: ghcr.io/papermerge/swagger-ui
      redoc_image: ghcr.io/papermerge/redoc
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.papermerge_image }}:${{needs.extract-version.outputs.old-version}}, ${{ env.papermerge_image }}:latest
          file: docker/prod/Dockerfile
      - name: Build and push swagger-ui
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.swagger_ui_image }}:${{needs.extract-version.outputs.old-version}}, ${{ env.swagger_ui_image }}:latest
          file: docker/Dockerfile.swagger
      - name: Build and push redoc
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.redoc_image }}:${{needs.extract-version.outputs.old-version}}, ${{ env.redoc_image }}:latest
          file: docker/Dockerfile.redoc

  publish-to-pypi:
    name: Publish to PyPi
    runs-on: ubuntu-latest
    needs: extract-version
    if: ${{ github.event.inputs.publish-to-pypi == 'true' }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Publish package
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry config pypi-token.pypi $PYPI_TOKEN
        poetry publish --build
