"""Initial migration

Revision ID: 96a1dbbc9982
Revises:
Create Date: 2024-11-04 08:51:37.463898

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '96a1dbbc9982'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nodes',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('ctype', sa.Enum('document', 'folder', native_enum=False), nullable=False),
    sa.Column('lang', sa.String(length=8), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('parent_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='nodes_user_id_fkey', ondelete='CASCADE', use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('parent_id', 'title', 'user_id', name='unique title per parent per user')
    )
    op.create_table('permissions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('codename', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('fg_color', sa.String(), nullable=True),
    sa.Column('bg_color', sa.String(), nullable=True),
    sa.Column('pinned', sa.Boolean(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tag_user_id_fk', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('folders',
    sa.Column('node_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('node_id')
    )
    op.create_table('groups_permissions',
    sa.Column('group_id', sa.Uuid(), nullable=True),
    sa.Column('permission_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], )
    )
    op.create_table('nodes_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.Uuid(), nullable=False),
    sa.Column('tag_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_staff', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('home_folder_id', sa.Uuid(), nullable=True),
    sa.Column('inbox_folder_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('date_joined', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['home_folder_id'], ['folders.node_id'], ondelete='CASCADE', deferrable=True),
    sa.ForeignKeyConstraint(['inbox_folder_id'], ['folders.node_id'], ondelete='CASCADE', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('custom_fields',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('extra_data', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('document_types',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('path_template', sa.String(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_groups',
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('group_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('users_permissions',
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('permission_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('document_types_custom_fields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_type_id', sa.Uuid(), nullable=False),
    sa.Column('custom_field_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['custom_field_id'], ['custom_fields.id'], ),
    sa.ForeignKeyConstraint(['document_type_id'], ['document_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents',
    sa.Column('node_id', sa.Uuid(), nullable=False),
    sa.Column('ocr', sa.Boolean(), nullable=False),
    sa.Column('ocr_status', sa.String(), nullable=False),
    sa.Column('document_type_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['document_type_id'], ['document_types.id'], ),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('node_id')
    )
    op.create_table('custom_field_values',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('document_id', sa.Uuid(), nullable=False),
    sa.Column('field_id', sa.Uuid(), nullable=False),
    sa.Column('value_text', sa.String(), nullable=True),
    sa.Column('value_boolean', sa.Boolean(), nullable=True),
    sa.Column('value_date', sa.DateTime(), nullable=True),
    sa.Column('value_int', sa.Integer(), nullable=True),
    sa.Column('value_float', sa.Float(), nullable=True),
    sa.Column('value_monetary', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.node_id'], ),
    sa.ForeignKeyConstraint(['field_id'], ['custom_fields.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_versions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=True),
    sa.Column('document_id', sa.Uuid(), nullable=False),
    sa.Column('lang', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('page_count', sa.Integer(), nullable=False),
    sa.Column('short_description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.node_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pages',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('lang', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('document_version_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['document_version_id'], ['document_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pages')
    op.drop_table('document_versions')
    op.drop_table('custom_field_values')
    op.drop_table('documents')
    op.drop_table('document_types_custom_fields')
    op.drop_table('users_permissions')
    op.drop_table('users_groups')
    op.drop_table('document_types')
    op.drop_table('custom_fields')
    op.drop_table('users')
    op.drop_table('nodes_tags')
    op.drop_table('groups_permissions')
    op.drop_table('folders')
    op.drop_table('tags')
    op.drop_table('permissions')
    op.drop_table('nodes')
    op.drop_table('groups')
    # ### end Alembic commands ###
